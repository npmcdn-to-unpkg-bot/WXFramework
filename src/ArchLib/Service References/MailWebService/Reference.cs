//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArchLib.MailWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://service.pharmatechs.sh.cn/", ConfigurationName="MailWebService.MailCenterSoap")]
    public interface MailCenterSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.pharmatechs.sh.cn/sendShortMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArchLib.MailWebService.sendShortMailResponse sendShortMail(ArchLib.MailWebService.sendShortMailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://service.pharmatechs.sh.cn/sendShortMail", ReplyAction="*")]
        System.Threading.Tasks.Task<ArchLib.MailWebService.sendShortMailResponse> sendShortMailAsync(ArchLib.MailWebService.sendShortMailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.pharmatechs.sh.cn/sendMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArchLib.MailWebService.sendMailResponse sendMail(ArchLib.MailWebService.sendMailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://service.pharmatechs.sh.cn/sendMail", ReplyAction="*")]
        System.Threading.Tasks.Task<ArchLib.MailWebService.sendMailResponse> sendMailAsync(ArchLib.MailWebService.sendMailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.pharmatechs.sh.cn/sendMailWithImgAndAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArchLib.MailWebService.sendMailWithImgAndAttachmentResponse sendMailWithImgAndAttachment(ArchLib.MailWebService.sendMailWithImgAndAttachmentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://service.pharmatechs.sh.cn/sendMailWithImgAndAttachment", ReplyAction="*")]
        System.Threading.Tasks.Task<ArchLib.MailWebService.sendMailWithImgAndAttachmentResponse> sendMailWithImgAndAttachmentAsync(ArchLib.MailWebService.sendMailWithImgAndAttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.pharmatechs.sh.cn/sendMailWithImg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ArchLib.MailWebService.sendMailWithImgResponse sendMailWithImg(ArchLib.MailWebService.sendMailWithImgRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://service.pharmatechs.sh.cn/sendMailWithImg", ReplyAction="*")]
        System.Threading.Tasks.Task<ArchLib.MailWebService.sendMailWithImgResponse> sendMailWithImgAsync(ArchLib.MailWebService.sendMailWithImgRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendShortMail", WrapperNamespace="http://service.pharmatechs.sh.cn/", IsWrapped=true)]
    public partial class sendShortMailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=0)]
        public string to;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=1)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=2)]
        public string body;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=3)]
        public string mailType;
        
        public sendShortMailRequest() {
        }
        
        public sendShortMailRequest(string to, string subject, string body, string mailType) {
            this.to = to;
            this.subject = subject;
            this.body = body;
            this.mailType = mailType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendShortMailResponse", WrapperNamespace="http://service.pharmatechs.sh.cn/", IsWrapped=true)]
    public partial class sendShortMailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=0)]
        public bool sendShortMailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=1)]
        public string message;
        
        public sendShortMailResponse() {
        }
        
        public sendShortMailResponse(bool sendShortMailResult, string message) {
            this.sendShortMailResult = sendShortMailResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMail", WrapperNamespace="http://service.pharmatechs.sh.cn/", IsWrapped=true)]
    public partial class sendMailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=0)]
        public string from;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=1)]
        public string to;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=2)]
        public string cc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=3)]
        public string bcc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=4)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=5)]
        public string body;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=6)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfBase64Binary")]
        [System.Xml.Serialization.XmlArrayItemAttribute(DataType="base64Binary", NestingLevel=1)]
        public byte[][][] attachment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=7)]
        public string mailType;
        
        public sendMailRequest() {
        }
        
        public sendMailRequest(string from, string to, string cc, string bcc, string subject, string body, byte[][][] attachment, string mailType) {
            this.from = from;
            this.to = to;
            this.cc = cc;
            this.bcc = bcc;
            this.subject = subject;
            this.body = body;
            this.attachment = attachment;
            this.mailType = mailType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMailResponse", WrapperNamespace="http://service.pharmatechs.sh.cn/", IsWrapped=true)]
    public partial class sendMailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=0)]
        public bool sendMailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=1)]
        public string message;
        
        public sendMailResponse() {
        }
        
        public sendMailResponse(bool sendMailResult, string message) {
            this.sendMailResult = sendMailResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMailWithImgAndAttachment", WrapperNamespace="http://service.pharmatechs.sh.cn/", IsWrapped=true)]
    public partial class sendMailWithImgAndAttachmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=0)]
        public string from;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=1)]
        public string to;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=2)]
        public string cc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=3)]
        public string bcc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=4)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=5)]
        public string body;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=6)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfBase64Binary")]
        [System.Xml.Serialization.XmlArrayItemAttribute(DataType="base64Binary", NestingLevel=1)]
        public byte[][][] Img;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=7)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfBase64Binary")]
        [System.Xml.Serialization.XmlArrayItemAttribute(DataType="base64Binary", NestingLevel=1)]
        public byte[][][] attachment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=8)]
        public string mailType;
        
        public sendMailWithImgAndAttachmentRequest() {
        }
        
        public sendMailWithImgAndAttachmentRequest(string from, string to, string cc, string bcc, string subject, string body, byte[][][] Img, byte[][][] attachment, string mailType) {
            this.from = from;
            this.to = to;
            this.cc = cc;
            this.bcc = bcc;
            this.subject = subject;
            this.body = body;
            this.Img = Img;
            this.attachment = attachment;
            this.mailType = mailType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMailWithImgAndAttachmentResponse", WrapperNamespace="http://service.pharmatechs.sh.cn/", IsWrapped=true)]
    public partial class sendMailWithImgAndAttachmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=0)]
        public bool sendMailWithImgAndAttachmentResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=1)]
        public string message;
        
        public sendMailWithImgAndAttachmentResponse() {
        }
        
        public sendMailWithImgAndAttachmentResponse(bool sendMailWithImgAndAttachmentResult, string message) {
            this.sendMailWithImgAndAttachmentResult = sendMailWithImgAndAttachmentResult;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMailWithImg", WrapperNamespace="http://service.pharmatechs.sh.cn/", IsWrapped=true)]
    public partial class sendMailWithImgRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=0)]
        public string from;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=1)]
        public string to;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=2)]
        public string cc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=3)]
        public string bcc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=4)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=5)]
        public string body;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=6)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfBase64Binary")]
        [System.Xml.Serialization.XmlArrayItemAttribute(DataType="base64Binary", NestingLevel=1)]
        public byte[][][] img;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=7)]
        public string mailType;
        
        public sendMailWithImgRequest() {
        }
        
        public sendMailWithImgRequest(string from, string to, string cc, string bcc, string subject, string body, byte[][][] img, string mailType) {
            this.from = from;
            this.to = to;
            this.cc = cc;
            this.bcc = bcc;
            this.subject = subject;
            this.body = body;
            this.img = img;
            this.mailType = mailType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMailWithImgResponse", WrapperNamespace="http://service.pharmatechs.sh.cn/", IsWrapped=true)]
    public partial class sendMailWithImgResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=0)]
        public bool sendMailWithImgResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.pharmatechs.sh.cn/", Order=1)]
        public string message;
        
        public sendMailWithImgResponse() {
        }
        
        public sendMailWithImgResponse(bool sendMailWithImgResult, string message) {
            this.sendMailWithImgResult = sendMailWithImgResult;
            this.message = message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MailCenterSoapChannel : ArchLib.MailWebService.MailCenterSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailCenterSoapClient : System.ServiceModel.ClientBase<ArchLib.MailWebService.MailCenterSoap>, ArchLib.MailWebService.MailCenterSoap {
        
        public MailCenterSoapClient() {
        }
        
        public MailCenterSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MailCenterSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MailCenterSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MailCenterSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArchLib.MailWebService.sendShortMailResponse ArchLib.MailWebService.MailCenterSoap.sendShortMail(ArchLib.MailWebService.sendShortMailRequest request) {
            return base.Channel.sendShortMail(request);
        }
        
        public bool sendShortMail(string to, string subject, string body, string mailType, out string message) {
            ArchLib.MailWebService.sendShortMailRequest inValue = new ArchLib.MailWebService.sendShortMailRequest();
            inValue.to = to;
            inValue.subject = subject;
            inValue.body = body;
            inValue.mailType = mailType;
            ArchLib.MailWebService.sendShortMailResponse retVal = ((ArchLib.MailWebService.MailCenterSoap)(this)).sendShortMail(inValue);
            message = retVal.message;
            return retVal.sendShortMailResult;
        }
        
        public System.Threading.Tasks.Task<ArchLib.MailWebService.sendShortMailResponse> sendShortMailAsync(ArchLib.MailWebService.sendShortMailRequest request) {
            return base.Channel.sendShortMailAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArchLib.MailWebService.sendMailResponse ArchLib.MailWebService.MailCenterSoap.sendMail(ArchLib.MailWebService.sendMailRequest request) {
            return base.Channel.sendMail(request);
        }
        
        public bool sendMail(string from, string to, string cc, string bcc, string subject, string body, byte[][][] attachment, string mailType, out string message) {
            ArchLib.MailWebService.sendMailRequest inValue = new ArchLib.MailWebService.sendMailRequest();
            inValue.from = from;
            inValue.to = to;
            inValue.cc = cc;
            inValue.bcc = bcc;
            inValue.subject = subject;
            inValue.body = body;
            inValue.attachment = attachment;
            inValue.mailType = mailType;
            ArchLib.MailWebService.sendMailResponse retVal = ((ArchLib.MailWebService.MailCenterSoap)(this)).sendMail(inValue);
            message = retVal.message;
            return retVal.sendMailResult;
        }
        
        public System.Threading.Tasks.Task<ArchLib.MailWebService.sendMailResponse> sendMailAsync(ArchLib.MailWebService.sendMailRequest request) {
            return base.Channel.sendMailAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArchLib.MailWebService.sendMailWithImgAndAttachmentResponse ArchLib.MailWebService.MailCenterSoap.sendMailWithImgAndAttachment(ArchLib.MailWebService.sendMailWithImgAndAttachmentRequest request) {
            return base.Channel.sendMailWithImgAndAttachment(request);
        }
        
        public bool sendMailWithImgAndAttachment(string from, string to, string cc, string bcc, string subject, string body, byte[][][] Img, byte[][][] attachment, string mailType, out string message) {
            ArchLib.MailWebService.sendMailWithImgAndAttachmentRequest inValue = new ArchLib.MailWebService.sendMailWithImgAndAttachmentRequest();
            inValue.from = from;
            inValue.to = to;
            inValue.cc = cc;
            inValue.bcc = bcc;
            inValue.subject = subject;
            inValue.body = body;
            inValue.Img = Img;
            inValue.attachment = attachment;
            inValue.mailType = mailType;
            ArchLib.MailWebService.sendMailWithImgAndAttachmentResponse retVal = ((ArchLib.MailWebService.MailCenterSoap)(this)).sendMailWithImgAndAttachment(inValue);
            message = retVal.message;
            return retVal.sendMailWithImgAndAttachmentResult;
        }
        
        public System.Threading.Tasks.Task<ArchLib.MailWebService.sendMailWithImgAndAttachmentResponse> sendMailWithImgAndAttachmentAsync(ArchLib.MailWebService.sendMailWithImgAndAttachmentRequest request) {
            return base.Channel.sendMailWithImgAndAttachmentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArchLib.MailWebService.sendMailWithImgResponse ArchLib.MailWebService.MailCenterSoap.sendMailWithImg(ArchLib.MailWebService.sendMailWithImgRequest request) {
            return base.Channel.sendMailWithImg(request);
        }
        
        public bool sendMailWithImg(string from, string to, string cc, string bcc, string subject, string body, byte[][][] img, string mailType, out string message) {
            ArchLib.MailWebService.sendMailWithImgRequest inValue = new ArchLib.MailWebService.sendMailWithImgRequest();
            inValue.from = from;
            inValue.to = to;
            inValue.cc = cc;
            inValue.bcc = bcc;
            inValue.subject = subject;
            inValue.body = body;
            inValue.img = img;
            inValue.mailType = mailType;
            ArchLib.MailWebService.sendMailWithImgResponse retVal = ((ArchLib.MailWebService.MailCenterSoap)(this)).sendMailWithImg(inValue);
            message = retVal.message;
            return retVal.sendMailWithImgResult;
        }
        
        public System.Threading.Tasks.Task<ArchLib.MailWebService.sendMailWithImgResponse> sendMailWithImgAsync(ArchLib.MailWebService.sendMailWithImgRequest request) {
            return base.Channel.sendMailWithImgAsync(request);
        }
    }
}
